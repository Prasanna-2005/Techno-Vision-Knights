<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>View Movies | Admin Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link
    href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Inter:wght@400;500;600;700;900&display=swap"
    rel="stylesheet">
  <style>
    :root {
      --glossy-gradient: linear-gradient(135deg,
          rgba(255, 255, 255, 0.1) 0%,
          rgba(255, 255, 255, 0.2) 50%,
          rgba(255, 255, 255, 0.1) 100%);
    }

    body {
      background: radial-gradient(circle at 10% 20%, rgba(15, 23, 42, 0.9) 0%, rgba(30, 41, 59, 0.9) 90%);
    }

    .glossy-effect {
      position: relative;
      overflow: hidden;
    }

    .glossy-effect::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: var(--glossy-gradient);
      pointer-events: none;
      z-index: 1;
    }

    .cell-scrollable {
      max-width: 200px;
      overflow-x: auto;
      white-space: nowrap;
      scrollbar-width: thin;
    }

    .synopsis-cell {
      max-width: 300px;
      overflow-x: auto;
    }

    .casts-cell {
      max-width: 250px;
      overflow-x: auto;
    }

    /* Custom Modal Styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.7);
      backdrop-filter: blur(5px);
      z-index: 999;
    }

    .modal-content {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: linear-gradient(145deg, #1e293b, #0f172a);
      padding: 2rem;
      border-radius: 12px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
      max-width: 90%;
      width: 400px;
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    /* Scrollbar styling */
    .overflow-x-auto::-webkit-scrollbar,
    .overflow-y-auto::-webkit-scrollbar {
      height: 6px;
      width: 6px;
    }

    .overflow-x-auto::-webkit-scrollbar-track,
    .overflow-y-auto::-webkit-scrollbar-track {
      background: rgba(255, 255, 255, 0.05);
      border-radius: 10px;
    }

    .overflow-x-auto::-webkit-scrollbar-thumb,
    .overflow-y-auto::-webkit-scrollbar-thumb {
      background: rgba(255, 255, 255, 0.2);
      border-radius: 10px;
    }

    .overflow-x-auto::-webkit-scrollbar-thumb:hover,
    .overflow-y-auto::-webkit-scrollbar-thumb:hover {
      background: rgba(255, 255, 255, 0.3);
    }

    /* Animation for modal */
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translate(-50%, -45%);
      }

      to {
        opacity: 1;
        transform: translate(-50%, -50%);
      }
    }

    .modal {
      animation: fadeIn 0.3s cubic-bezier(0.22, 1, 0.36, 1);
    }

    /* Responsive table adjustments */
    @media (max-width: 1280px) {

      .responsive-table th:nth-child(5),
      .responsive-table td:nth-child(5),
      .responsive-table th:nth-child(6),
      .responsive-table td:nth-child(6) {
        display: none;
      }
    }

    @media (max-width: 1024px) {

      .responsive-table th:nth-child(7),
      .responsive-table td:nth-child(7),
      .responsive-table th:nth-child(8),
      .responsive-table td:nth-child(8) {
        display: none;
      }
    }

    @media (max-width: 768px) {

      .responsive-table th:nth-child(4),
      .responsive-table td:nth-child(4),
      .responsive-table th:nth-child(9),
      .responsive-table td:nth-child(9) {
        display: none;
      }

      .responsive-table td:nth-child(10) {
        max-width: 150px;
      }
    }

    @media (max-width: 640px) {

      .responsive-table th:nth-child(3),
      .responsive-table td:nth-child(3) {
        display: none;
      }

      .responsive-table td:nth-child(2) {
        max-width: 120px;
      }

      .responsive-table td:nth-child(10) {
        max-width: 100px;
      }
    }

    /* Glossy button effect */
    .glossy-btn {
      position: relative;
      overflow: hidden;
    }

    .glossy-btn::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(to bottom right,
          rgba(255, 255, 255, 0) 0%,
          rgba(255, 255, 255, 0) 30%,
          rgba(255, 255, 255, 0.3) 45%,
          rgba(255, 255, 255, 0) 60%);
      transform: rotate(30deg);
      transition: all 0.3s;
    }

    .glossy-btn:hover::before {
      left: 100%;
    }

    /* Glass card effect */
    .glass-card {
      background: rgba(255, 255, 255, 0.08);
      backdrop-filter: blur(12px);
      -webkit-backdrop-filter: blur(12px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.15);
    }

    /* Floating action button */
    .fab {
      position: fixed;
      bottom: 2rem;
      right: 2rem;
      width: 60px;
      height: 60px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
      z-index: 50;
      transition: all 0.3s ease;
    }

    .fab:hover {
      transform: translateY(-3px) scale(1.05);
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
    }

    /* Tooltip */
    .tooltip {
      position: relative;
    }

    .tooltip-text {
      visibility: hidden;
      width: 120px;
      background-color: rgba(0, 0, 0, 0.8);
      color: #fff;
      text-align: center;
      border-radius: 6px;
      padding: 5px;
      position: absolute;
      z-index: 1;
      bottom: 125%;
      left: 50%;
      transform: translateX(-50%);
      opacity: 0;
      transition: opacity 0.3s;
      font-size: 0.8rem;
    }

    .tooltip:hover .tooltip-text {
      visibility: visible;
      opacity: 1;
    }
  </style>
</head>

<body class="min-h-screen text-white font-poppins">
  <!-- Navigation -->
  <nav
    class="w-full bg-gradient-to-r from-blue-700 via-indigo-800 to-purple-900 text-white px-6 py-4 flex items-center justify-between shadow-lg rounded-b-xl flex-wrap gap-4 glossy-effect"
    style="font-family: 'Inter', sans-serif">
    <a href="/dashboard" class="flex items-center gap-2 hover:opacity-80 transition-opacity">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 mr-2" fill="none" viewBox="0 0 24 24"
        stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
          d="M7 4v16M17 4v16M3 8h4m10 0h4M3 12h18M3 16h4m10 0h4M4 20h16a1 1 0 001-1V5a1 1 0 00-1-1H4a1 1 0 00-1 1v14a1 1 0 001 1z" />
      </svg>
      <span class="text-xl sm:text-2xl font-extrabold tracking-tight">Admin Dashboard</span>
    </a>

    <div class="flex items-center gap-4">

      <a href="/logout"
        class="glossy-btn bg-red-500 px-5 py-2 rounded-lg shadow-md hover:bg-red-600 transition-all relative">
        Logout
      </a>
    </div>
  </nav>

  <!-- Main Content -->
  <div class="max-w-7xl mx-auto mt-8 px-4 sm:px-6 lg:px-8 pb-16">
    <div class="glass-card rounded-xl shadow-2xl p-6 glossy-effect">
      <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4">
        <div>
          <h2 class="text-2xl sm:text-3xl font-bold text-white">Movie Management</h2>
          <p class="text-sm text-gray-300 mt-1">Manage your movie catalog with ease</p>
        </div>
        <div class="flex gap-4 w-full sm:w-auto">
          <div class="relative flex-grow max-w-md">
            <input type="text" id="searchInput"
              class="w-full border-0 bg-white bg-opacity-15 text-white placeholder-gray-300 focus:ring-2 focus:ring-blue-500 rounded-lg py-2.5 pl-10 pr-4 shadow-sm"
              placeholder="Search movies..." />
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
          </div>
          <a href="/add-movie"
            class="glossy-btn bg-gradient-to-r from-green-500 to-emerald-600 text-white px-4 py-2.5 rounded-lg hover:opacity-90 transition-all whitespace-nowrap flex items-center gap-2 relative">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd"
                d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z"
                clip-rule="evenodd" />
            </svg>
            Add Movie
          </a>
        </div>
      </div>

      <!-- Movie Table -->
      <div class="overflow-x-auto max-h-[65vh] overflow-y-auto rounded-xl border border-gray-700">
        <table class="w-full border-collapse">
          <thead class="top-0 bg-gradient-to-r from-blue-800 to-indigo-900 text-white">
            <tr>
              <th class="border border-gray-700 p-3">ID</th>
              <th class="border border-gray-700 p-3 text-left">Title</th>
              <th class="border border-gray-700 p-3">Year</th>
              <th class="border border-gray-700 p-3">Runtime</th>
              <th class="border border-gray-700 p-3">Language</th>
              <th class="border border-gray-700 p-3">Country</th>
              <th class="border border-gray-700 p-3">Rating</th>
              <th class="border border-gray-700 p-3">Created By</th>
              <th class="border border-gray-700 p-3">Genres</th>
              <th class="border border-gray-700 p-3">Casts</th>
              <th class="border border-gray-700 p-3">Actions</th>
            </tr>
          </thead>
          <tbody id="movieTable" class="divide-y divide-gray-700">
            <% moviesList.forEach(movie=> { %>
              <tr class="bg-white bg-opacity-5 hover:bg-opacity-20 transition-all" data-movie-id="<%= movie.id %>">
                <td class="border border-gray-700 p-3 text-center">
                  <span class="bg-blue-900/50 px-2 py-1 rounded text-xs font-mono">
                    <%= movie.id %>
                  </span>
                </td>
                <td class="border border-gray-700 p-3 font-medium cell-scrollable">
                  <div class="flex items-center gap-2">
                    <% if (movie.poster_url) { %>
                      <img src="<%= movie.poster_url %>" alt="<%= movie.title %> poster"
                        class="w-8 h-12 object-cover rounded">
                      <% } %>
                        <span>
                          <%= movie.title %>
                        </span>
                  </div>
                </td>
                <td class="border border-gray-700 p-3 text-center">
                  <span class="bg-gray-700/50 px-2 py-1 rounded text-sm">
                    <%= movie.release_year %>
                  </span>
                </td>
                <td class="border border-gray-700 p-3 text-center">
                  <% if (movie.runtime) { %>
                    <span class="bg-purple-900/50 px-2 py-1 rounded text-xs">
                      <%= Math.floor(movie.runtime / 60) + 'h ' + (movie.runtime % 60) + 'm' %>
                    </span>
                    <% } else { %>
                      <span class="text-gray-400 text-xs">N/A</span>
                      <% } %>
                </td>
                <td class="border border-gray-700 p-3 text-center cell-scrollable">
                  <%= movie.language || '<span class="text-gray-400">N/A</span>' %>
                </td>
                <td class="border border-gray-700 p-3 text-center cell-scrollable">
                  <%= movie.country || '<span class="text-gray-400">N/A</span>' %>
                </td>
                <td class="border border-gray-700 p-3 text-center">
                  <% if (movie.average_rating && parseFloat(movie.average_rating)> 0) { %>
                    <span
                      class="px-2.5 py-1 rounded-full bg-gradient-to-r from-yellow-500 to-amber-600 text-white inline-flex items-center gap-1 text-sm">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                        <path
                          d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                      </svg>
                      <%= parseFloat(movie.average_rating).toFixed(1) %>
                    </span>
                    <% } else { %>
                      <span class="text-gray-400 text-sm">-</span>
                      <% } %>
                </td>
                <td class="border border-gray-700 p-3 text-center cell-scrollable">
                  <span class="text-sm">
                    <%= movie.created_by_user || 'N/A' %>
                  </span>
                </td>
                <td class="border border-gray-700 p-3 cell-scrollable">
                  <div class="flex flex-wrap gap-1 justify-center">
                    <% if (movie.genres && movie.genres.length> 0) { %>
                      <% movie.genres.forEach(genre=> { %>
                        <span class="px-2 py-1 rounded-full bg-blue-600/80 text-white text-xs whitespace-nowrap">
                          <%= genre %>
                        </span>
                        <% }); %>
                          <% } else { %>
                            <span class="text-gray-400 text-xs">-</span>
                            <% } %>
                  </div>
                </td>
                <td class="border border-gray-700 p-3 cell-scrollable">
                  <div class="flex flex-wrap gap-1 justify-center">
                    <% if (movie.casts && movie.casts.length> 0) { %>
                      <% movie.casts.slice(0, 3).forEach(cast=> { %>
                        <div class="px-2 py-1 rounded bg-purple-600/80 text-white text-xs truncate tooltip"
                          title="<%= cast.person_name %><% if (cast.role) { %> (<%= cast.role %>)<% } %><% if (cast.character_name) { %> as <%= cast.character_name %><% } %>">
                          <strong>
                            <%= cast.person_name || 'Unknown' %>
                          </strong>
                          <% if (cast.role) { %> (<%= cast.role %>) <% } %>
                                <% if (cast.character_name) { %> as <%= cast.character_name %>
                                    <% } %>
                        </div>
                        <% }); %>
                          <% if (movie.casts.length> 3) { %>
                            <div class="text-xs text-gray-300 text-center">+<%= movie.casts.length - 3 %> more</div>
                            <% } %>
                              <% } else { %>
                                <span class="text-gray-400 text-xs text-center">-</span>
                                <% } %>
                  </div>
                </td>
                <td class="border border-gray-700 p-3 text-center">
                  <div class="flex flex-col sm:flex-row gap-2 justify-center">
                    <a href="/edit-movie/<%= movie.id %>"
                      class="glossy-btn bg-gradient-to-r from-blue-500 to-blue-600 text-white px-3 py-1 rounded-lg hover:opacity-90 transition-all flex items-center justify-center gap-1 text-sm relative">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                      </svg>
                      Edit
                    </a>
                    <button
                      class="glossy-btn bg-gradient-to-r from-red-500 to-red-600 text-white px-3 py-1 rounded-lg hover:opacity-90 transition-all flex items-center justify-center gap-1 text-sm relative"
                      onclick="openDeleteModal(<%= movie.id %>, '<%= movie.title.replace(/'/g, " \\'") %>')">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                      </svg>
                      Delete
                    </button>
                  </div>
                </td>
              </tr>
              <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Floating Action Button (Mobile) -->
  <a href="/add-movie" class="fab md:hidden glossy-effect bg-gradient-to-r from-green-500 to-emerald-600">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" viewBox="0 0 20 20" fill="currentColor">
      <path fill-rule="evenodd"
        d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
    </svg>
  </a>

  <!-- Delete Confirmation Modal -->
  <div id="deleteModal" class="modal">
    <div class="modal-content glossy-effect">
      <h3 class="text-xl font-bold mb-4 flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-500" fill="none" viewBox="0 0 24 24"
          stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
        </svg>
        Confirm Deletion
      </h3>
      <p class="text-gray-300">Are you sure you want to delete <span id="movieTitleToDelete"
          class="font-semibold text-white"></span>?</p>
      <p class="text-red-400 text-sm mt-2 flex items-center gap-1">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        This action cannot be undone.
      </p>
      <div class="flex justify-end mt-6 gap-3">
        <button
          class="glossy-btn bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors relative"
          onclick="closeDeleteModal()">
          Cancel
        </button>
        <button
          class="glossy-btn bg-gradient-to-r from-red-500 to-red-600 text-white px-4 py-2 rounded-lg hover:opacity-90 transition-all flex items-center gap-2 relative"
          id="confirmDeleteButton">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
          </svg>
          Confirm Delete
        </button>
      </div>
    </div>
  </div>

  <script>
    const deleteModal = document.getElementById('deleteModal');
    const movieTitleToDelete = document.getElementById('movieTitleToDelete');
    let currentMovieId;

    // Open Delete Modal with movie title
    function openDeleteModal(movieId, movieTitle) {
      currentMovieId = movieId;
      movieTitleToDelete.textContent = movieTitle || 'this movie';
      deleteModal.style.display = 'block';
      document.body.style.overflow = 'hidden';
    }

    // Close Delete Modal
    function closeDeleteModal() {
      deleteModal.style.display = 'none';
      document.body.style.overflow = '';
    }

    // Close modal when clicking outside
    window.addEventListener('click', (event) => {
      if (event.target === deleteModal) {
        closeDeleteModal();
      }
    });

    // Confirm Delete
    document.getElementById('confirmDeleteButton').addEventListener('click', () => {
      deleteMovie(currentMovieId);
    });

    // Search Movies
    document.getElementById('searchInput').addEventListener('input', filterMovies);

    function filterMovies() {
      const searchValue = document.getElementById('searchInput').value.toLowerCase();
      const rows = document.querySelectorAll('#movieTable tr');

      rows.forEach(row => {
        const cells = row.querySelectorAll('td');
        let matchesSearch = false;

        // Check each cell except the actions cell
        for (let i = 0; i < cells.length - 1; i++) {
          if (cells[i].textContent.toLowerCase().includes(searchValue)) {
            matchesSearch = true;
            break;
          }
        }

        row.style.display = matchesSearch ? '' : 'none';
      });
    }

    // Delete Movie with better error handling
    function deleteMovie(movieId) {
      const deleteButton = document.getElementById('confirmDeleteButton');
      const originalText = deleteButton.innerHTML;

      // Show loading state
      deleteButton.innerHTML = `
        <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Deleting...
      `;
      deleteButton.disabled = true;

      fetch(`/delete-movie/${movieId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        }
      })
        .then(async response => {
          if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || 'Failed to delete movie');
          }
          return response.json();
        })
        .then(data => {
          const row = document.querySelector(`tr[data-movie-id="${movieId}"]`);
          if (row) row.remove();

          // Show success notification
          showNotification(data.message || 'Movie deleted successfully', 'success');
        })
        .catch(error => {
          console.error('Error:', error);
          showNotification(error.message || 'An error occurred while deleting the movie', 'error');
        })
        .finally(() => {
          closeDeleteModal();
          deleteButton.innerHTML = originalText;
          deleteButton.disabled = false;
        });
    }

    // Show notification
    function showNotification(message, type = 'success') {
      const notification = document.createElement('div');
      notification.className = ` top-4 right-4 px-6 py-3 rounded-lg shadow-lg z-1000 glass-card flex items-center gap-2 border ${type === 'success' ? 'border-green-500/30' : 'border-red-500/30'
        }`;
      notification.style.animation = 'fadeIn 0.3s ease-out';

      notification.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 ${type === 'success' ? 'text-green-400' : 'text-red-400'
        }" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="${type === 'success'
          ? 'M5 13l4 4L19 7'
          : 'M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'
        }" />
        </svg>
        ${message}
      `;

      document.body.appendChild(notification);

      setTimeout(() => {
        notification.style.animation = 'fadeOut 0.3s ease-in';
        setTimeout(() => notification.remove(), 300);
      }, 3000);
    }

    // Add fadeOut animation dynamically
    const style = document.createElement('style');
    style.textContent = `
      @keyframes fadeOut {
        from { opacity: 1; transform: translateY(0); }
        to { opacity: 0; transform: translateY(-20px); }
      }
    `;
    document.head.appendChild(style);
  </script>
</body>

</html>