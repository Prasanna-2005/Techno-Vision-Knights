<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Users</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    colors: {
                        dark: {
                            primary: '#1e1e2d',
                            secondary: '#252636',
                            accent: '#3a3a5e',
                            highlight: '#6366f1'
                        }
                    },
                    fontFamily: {
                        sans: ['Inter', 'sans-serif']
                    }
                }
            }
        }
    </script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/inter-ui/3.19.3/inter.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #1e1e2d;
        }

        ::-webkit-scrollbar-thumb {
            background: #3a3a5e;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #6366f1;
        }

        /* Table animation */
        tr {
            transition: all 0.2s ease;
        }

        tr:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(99, 102, 241, 0.1), 0 2px 4px -1px rgba(99, 102, 241, 0.06);
        }

        /* Empty state styling */
        .empty-state {
            display: none;
            text-align: center;
            padding: 2rem;
        }
    </style>
</head>

<body class="bg-dark-primary text-gray-200 min-h-screen font-sans">
    <!-- Navbar -->
    <nav class="bg-dark-secondary border-b border-dark-accent sticky top-0 z-10 shadow-xl">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center">
                    <a href="/dashboard" class="text-2xl font-bold text-white flex items-center">
                        <span class="text-indigo-400 mr-2"><svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 mr-2"
                                fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M7 4v16M17 4v16M3 8h4m10 0h4M3 12h18M3 16h4m10 0h4M4 20h16a1 1 0 001-1V5a1 1 0 00-1-1H4a1 1 0 00-1 1v14a1 1 0 001 1z" />
                            </svg></span>
                        Admin Dashboard
                    </a>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/logout"
                        class="bg-dark-accent hover:bg-dark-highlight text-white px-4 py-2 rounded-md text-sm font-medium transition duration-150 ease-in-out">
                        <i class="fas fa-sign-out-alt mr-1"></i> Logout
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main content -->
    <div class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
        <div class="bg-dark-secondary rounded-xl shadow-lg overflow-hidden">
            <!-- Header section -->
            <div class="p-6 border-b border-dark-accent">
                <div class="flex flex-col md:flex-row md:items-center md:justify-between">
                    <h2 class="text-2xl md:text-3xl font-bold text-white">
                        <i class="fas fa-users text-indigo-400 mr-2"></i> User Management
                    </h2>
                    <div class="mt-4 md:mt-0">
                        <div class="relative rounded-md shadow-sm">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i class="fas fa-search text-gray-500"></i>
                            </div>
                            <input type="text" id="searchInput"
                                class="bg-dark-accent border border-dark-highlight focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-10 pr-12 py-2 sm:text-sm rounded-md text-white placeholder-gray-400"
                                placeholder="Search by ID or Username">
                        </div>
                    </div>
                </div>
            </div>

            <!-- Table section -->
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-dark-accent">
                    <thead class="bg-dark-accent">
                        <tr>
                            <th scope="col"
                                class="px-6 py-3 text-left text-xs font-medium text-indigo-300 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <span>ID</span>
                                    <i class="fas fa-sort ml-1 text-gray-500"></i>
                                </div>
                            </th>
                            <th scope="col"
                                class="px-6 py-3 text-left text-xs font-medium text-indigo-300 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <span>Username</span>
                                    <i class="fas fa-sort ml-1 text-gray-500"></i>
                                </div>
                            </th>
                            <th scope="col"
                                class="px-6 py-3 text-left text-xs font-medium text-indigo-300 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <span>Email</span>
                                    <i class="fas fa-sort ml-1 text-gray-500"></i>
                                </div>
                            </th>
                            <th scope="col"
                                class="px-6 py-3 text-left text-xs font-medium text-indigo-300 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <span>Role</span>
                                    <i class="fas fa-sort ml-1 text-gray-500"></i>
                                </div>
                            </th>
                            <th scope="col"
                                class="px-6 py-3 text-right text-xs font-medium text-indigo-300 uppercase tracking-wider">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody id="userTable" class="divide-y divide-dark-accent">
                        <% users.forEach(user=> { %>
                            <tr class="bg-dark-secondary transition-colors hover:bg-dark-accent"
                                data-user-id="<%= user.id %>">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="text-sm font-medium text-gray-300">#<%= user.id %></span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="flex-shrink-0 h-8 w-8">
                                            <div
                                                class="h-8 w-8 rounded-full bg-indigo-500 flex items-center justify-center">
                                                <span class="text-white font-medium">
                                                    <%= user.username.charAt(0).toUpperCase() %>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-white">
                                                <%= user.username %>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-300">
                                        <%= user.email %>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap role">
                                    <% if (user.role==='admin' ) { %>
                                        <span
                                            class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-purple-100 text-purple-800">
                                            Admin
                                        </span>
                                        <% } else if (user.role==='moderator' ) { %>
                                            <span
                                                class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                                                Moderator
                                            </span>
                                            <% } else { %>
                                                <span
                                                    class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
                                                    User
                                                </span>
                                                <% } %>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <% if (currentUser.role==='admin' && currentUser.id !==user.id) { %>
                                        <button onclick="confirmDelete('<%= user.id %>')"
                                            class="text-white bg-red-600 hover:bg-red-700 px-3 py-1 rounded-md transition-colors inline-flex items-center">
                                            <i class="fas fa-trash-alt mr-1"></i> Delete
                                        </button>
                                        <% } else { %>
                                            <span class="text-gray-500 inline-flex items-center">
                                                <i class="fas fa-lock mr-1"></i> Cannot delete
                                            </span>
                                            <% } %>
                                </td>
                            </tr>
                            <% }); %>
                    </tbody>
                </table>

                <!-- Empty state when no results found -->
                <div id="emptyState" class="empty-state text-gray-400">
                    <i class="fas fa-search fa-3x mb-4"></i>
                    <p>No users match your search criteria</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById("searchInput").addEventListener("input", filterUsers);

        function filterUsers() {
            let searchValue = document.getElementById("searchInput").value.toLowerCase();
            let rows = document.querySelectorAll("#userTable tr");
            let visibleCount = 0;

            rows.forEach(row => {
                let userId = row.children[0].textContent.toLowerCase();
                let userName = row.querySelector("td:nth-child(2)").textContent.toLowerCase();

                let matchesSearch = userId.includes(searchValue) || userName.includes(searchValue);

                row.style.display = matchesSearch ? "" : "none";
                if (matchesSearch) visibleCount++;
            });

            // Show empty state if no results
            const emptyState = document.getElementById("emptyState");
            if (visibleCount === 0) {
                emptyState.style.display = "block";
            } else {
                emptyState.style.display = "none";
            }
        }

        function confirmDelete(userId) {
            // Create custom modal instead of browser confirm
            const modal = document.createElement('div');
            modal.innerHTML = `
                <div class="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50">
                    <div class="bg-dark-secondary rounded-lg p-6 max-w-sm mx-auto">
                        <div class="flex items-center justify-center text-red-500 mb-4">
                            <i class="fas fa-exclamation-triangle text-4xl"></i>
                        </div>
                        <h3 class="text-lg font-medium text-white text-center">Confirm Deletion</h3>
                        <p class="text-gray-300 mt-2 text-center">Are you sure you want to delete this user? This action cannot be undone.</p>
                        <div class="flex justify-center mt-6 space-x-4">
                            <button onclick="this.closest('.fixed').remove()" class="px-4 py-2 bg-dark-accent text-white rounded-md hover:bg-dark-highlight transition-colors">
                                Cancel
                            </button>
                            <button onclick="deleteUser('${userId}'); this.closest('.fixed').remove()" class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors">
                                Delete
                            </button>
                        </div>
                    </div>
                </div>
            `;
            document.body.appendChild(modal);
        }

        function deleteUser(userId) {
            // Show loading indicator
            const row = document.querySelector(`tr[data-user-id="${userId}"]`);
            if (row) {
                const actionCell = row.querySelector('td:last-child');
                actionCell.innerHTML = '<div class="flex justify-center"><div class="animate-spin rounded-full h-5 w-5 border-t-2 border-b-2 border-indigo-500"></div></div>';
            }

            fetch(`/users/delete/${userId}`, {
                method: 'DELETE'
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(errorData => {
                            throw new Error(errorData.message || 'Failed to delete user');
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    // Animation for row removal
                    if (row) {
                        row.style.transition = 'all 0.5s ease';
                        row.style.backgroundColor = 'rgba(220, 38, 38, 0.1)';
                        row.style.opacity = '0';
                        row.style.height = '0';

                        setTimeout(() => {
                            row.remove();

                            // Show toast notification
                            const toast = document.createElement('div');
                            toast.className = 'fixed bottom-4 right-4 bg-green-600 text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center';
                            toast.innerHTML = `
                                <i class="fas fa-check-circle mr-2"></i>
                                <span>${data.message || 'User deleted successfully'}</span>
                            `;
                            document.body.appendChild(toast);

                            // Remove toast after 3 seconds
                            setTimeout(() => {
                                toast.style.opacity = '0';
                                toast.style.transition = 'opacity 0.5s ease';
                                setTimeout(() => toast.remove(), 500);
                            }, 3000);
                        }, 500);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);

                    // Show error toast
                    const toast = document.createElement('div');
                    toast.className = 'fixed bottom-4 right-4 bg-red-600 text-white px-4 py-2 rounded-lg shadow-lg z-50 flex items-center';
                    toast.innerHTML = `
                        <i class="fas fa-exclamation-circle mr-2"></i>
                        <span>${error.message || 'An error occurred while deleting the user'}</span>
                    `;
                    document.body.appendChild(toast);

                    // Remove toast after 3 seconds
                    setTimeout(() => {
                        toast.style.opacity = '0';
                        toast.style.transition = 'opacity 0.5s ease';
                        setTimeout(() => toast.remove(), 500);
                    }, 3000);

                    // Restore row if it exists
                    if (row) {
                        row.style = '';
                        const actionCell = row.querySelector('td:last-child');
                        actionCell.innerHTML = `
                            <button onclick="confirmDelete('${userId}')" 
                                class="text-white bg-red-600 hover:bg-red-700 px-3 py-1 rounded-md transition-colors inline-flex items-center">
                                <i class="fas fa-trash-alt mr-1"></i> Delete
                            </button>
                        `;
                    }
                });
        }

        // Responsive adjustments for mobile
        function handleResponsiveness() {
            const table = document.querySelector('table');
            if (window.innerWidth < 640) {
                table.classList.add('table-compact');
            } else {
                table.classList.remove('table-compact');
            }
        }

        window.addEventListener('resize', handleResponsiveness);
        handleResponsiveness();
    </script>
</body>

</html>